---

# project information
project_name: radarr
project_url: "https://github.com/geogolem/Radarr/tree/JustWatchSupport"
project_logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/radarr.png"
project_blurb: |
  [{{ project_name|capitalize }}]({{ project_url }}) - A fork of Sonarr to work with movies Ã  la Couchpotato.
project_lsio_github_repo_url: "https://github.com/linuxserver/docker-{{ project_name }}"

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
  - { arch: "{{ arch_armhf }}", tag: "arm32v7-latest"}

# development version
development_versions: true
development_versions_items:
  - { tag: "latest", desc: "Stable Radarr releases" }
  - { tag: "5.14", desc: "Stable Radarr releases, but run on Mono 5.14" }
  - { tag: "nightly", desc: "Nightly Radarr releases" }

# container parameters
param_container_name: "{{ project_name }}"
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "/path/to/data", desc: "Database and Radarr configs" }
  - { vol_path: "/movies", vol_host_path: "/path/to/movies", desc: "Location of Movie library on disk (See note in Application setup)" }
  - { vol_path: "/downloads", vol_host_path: "/path/to/downloadclient-downloads", desc: "Location of download managers output directory (See note in Application setup)" }

param_usage_include_ports: true
param_ports:
  - { external_port: "7878", internal_port: "7878", port_desc: "The port for the Radarr webinterface" }
param_usage_include_env: true
param_env_vars:
  - { env_var: "TZ", env_value: "America/New_York", desc: "Specify a timezone to use EG Europe/London, this is required for Radarr"}
# optional env variables
opt_param_usage_include_env: true
opt_param_env_vars:
  - { env_var: "UMASK_SET", env_value: "022", desc: "control permissions of files and directories created by Radarr"}

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  Access the webui at `<your-ip>:7878`, for more information check out [Radarr](https://github.com/Radarr/Radarr).

  **Special Note**: Following our current folder structure will result in an inability to hardlink from your downloads to your movies folder because they are on seperate volumes. To support hardlinking, ensure that the movies and downloads data are on a single volume. For example, if you have `/mnt/storage/Movies` and `/mnt/storage/downloads/completed/Movies`, you would want something like `/mnt/storage:/media` for your volume. Then you can hardlink from `/media/downloads/completed` to `/media/Movies`.

  Another item to keep in mind, is that within Radarr itself, you should map your download client folder to your radarr folder. Navigate to **Settings -> Download Client -> Advanced Settings -> Remote Path Mappings**. Add a new mapping, and set: the Host as the same entry of the Host in your download client (for example its IP address), the Remote Path as `/downloads/Movies` (relative to the internal container path), and Local Path as `/media/downloads/completed/Movies`, assuming you have folders to separate your downloaded data types.

# changelog
changelogs:
  - { date: "05.04.20:", desc: "Move app to /app." }
  - { date: "01.08.19:", desc: "Rebase to Linuxserver LTS mono version." }
  - { date: "13.06.19:", desc: "Add env variable for setting umask." }
  - { date: "10.05.19:", desc: "Rebase to Bionic." }
  - { date: "23.03.19:", desc: "Switching to new Base images, shift to arm32v7 tag." }
  - { date: "09.09.18:", desc: "Add pipeline build process." }
  - { date: "24.02.18:", desc: "Add nightly branch." }
  - { date: "06.02.18:", desc: "Radarr repo changed owner." }
  - { date: "15.12.17:", desc: "Fix continuation lines." }
  - { date: "17.04.17:", desc: "Switch to using inhouse mono baseimage, adds python also." }
  - { date: "13.04.17:", desc: "Switch to official mono repository." }
  - { date: "10.01.17:", desc: "Initial Release." }
